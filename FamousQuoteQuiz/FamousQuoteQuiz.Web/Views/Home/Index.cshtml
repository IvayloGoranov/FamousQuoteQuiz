@using FamousQuoteQuiz.Models
@model FamousQuoteQuiz.Web.ViewModels.QuoteAndAuthorAnswersDTO

@{
    ViewBag.Title = "Home Page";
}

@if (TempData.ContainsKey("Message"))
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

<h2 class="text-muted">Who said it?</h2>
<div class="row">
    <div class="col-md-12 servive-block servive-block-pink">
        <p>
            @Model.Quote.Content
        </p>
    </div>
</div>

@if (Model.QuizModeType == QuizModeType.Binary)
{
    <div class="row">
        <div class="col-md-12">
            <p class="text-muted text-center">
                @Model.AuthorAnswers.First()
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-center">
            @Html.ActionLink("Yes", "Index", null, new { @class = "btn btn-success" })
            @Html.ActionLink("No", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12 text-center">
            <div class="btn-group-vertical">
                @Html.ActionLink("->" + Model.AuthorAnswers[0], "Index", null, new { @class = "btn btn-primary" })
                @Html.ActionLink("->" + Model.AuthorAnswers[1], "Index", null, new { @class = "btn btn-primary" })
                @Html.ActionLink("->" + Model.AuthorAnswers[2], "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}



